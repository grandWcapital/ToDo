@using ToDoApp.Utilities;
@model PagedList<Duty>


<h2>Duties</h2>
<hr />
@if(!Model.Any())
{
    <h3>No duties found</h3>
}
else
{
    <table>
        <tr>
            <th>Id</th>
            <th>Title</th>
            <th>Description</th>
            <th>Status</th>
            <th>Priority</th>
            <th>Duration</th>
            <th>Due Date</th>
        </tr>
        @foreach (var duty in Model)
        {
            <tr>
                <td>@duty.Id</td>
                <td>@duty.Title</td>
                <td>@duty.Description</td>
                <td>@duty.Status</td>
                <td>@duty.Priority</td>
                <td>@duty.Duration</td>
                <td>@duty.DueDate</td>
            </tr>
        }

    </table>
}
@{
    var previousButtonDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextButtonDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="IndexPaging" asp-route-pageNumber="@(Model.PageIndex - 1)" class="btn btn-default @previousButtonDisabled">
    Previous
</a>
<a asp-action="IndexPaging" asp-route-pageNumber="@(Model.PageIndex + 1)" class="btn btn-default @nextButtonDisabled">
    Next
</a>


<p>
    <a class="btn btn-primary" asp-action="Add">Add new pie</a>
</p>

<a asp-controller="Duty" asp-action="Index">Add</a>
